<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
	
    <groupId>com.sapient</groupId>
    <artifactId>weather-forecast</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>
        <commons-lang3.version>3.8.1</commons-lang3.version>
        <guava.version>27.0-jre</guava.version>
        <cache-api.version>1.1.0</cache-api.version>
        <commons-collections4.version>4.2</commons-collections4.version>
        <fst.version>2.57</fst.version>
        <dockerfile-maven-plugin.version>1.4.9</dockerfile-maven-plugin.version>
        <docker.image.prefix>com.sapient</docker.image.prefix>
        <usertype.core.version>7.0.0.CR1</usertype.core.version>
        <commons-io.version>2.6</commons-io.version>
        <libphonenumber.version>8.10.1</libphonenumber.version>
        <spring-security-bom.version>5.1.1.RELEASE</spring-security-bom.version>
        <spring-security-jwt.version>1.0.9.RELEASE</spring-security-jwt.version>
        <logback-gelf.version>1.1.0</logback-gelf.version>
        <httpclient.version>4.5.8</httpclient.version>
    </properties>

    <!-- Inherit defaults from Spring Boot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
    </parent>
    
     
    <!-- Add typical dependencies for a authentication application -->
    <dependencies>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
	      <!-- JSTL -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <!-- To compile JSP files -->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.github.ben-manes.caffeine</groupId>
		    <artifactId>caffeine</artifactId>
	    </dependency>

        <!-- for servlet spec 4.0 the supported tomcat version is 9.0.x -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- some production ready features -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>2.1.0.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>2.1.0.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-bom</artifactId>
            <version>${spring-security-bom.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
            <version>${spring-security-jwt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security-bom.version}</version>
        </dependency>

        
        
        <!-- caching -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${cache-api.version}</version>
        </dependency>

        <!-- utils -->
       <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
                
       
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>

        <!-- jackson joda date time -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
        </dependency>

        <!-- hibernate with joda time joda money -->
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>${usertype.core.version}</version>
        </dependency>

          <dependency>
            <groupId>de.siegmar</groupId>
            <artifactId>logback-gelf</artifactId>
            <version>${logback-gelf.version}</version>
        </dependency>
        
        <dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- multiple maven profiles for multiple environment -->
    <profiles>
        <profile>
            <id>production</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <excludes>
                            <!-- exclude any non filtered resources -->
                            <exclude>*.jks</exclude>
                            <exclude>data/**</exclude>
                        </excludes>
                        <filtering>true</filtering>
                    </resource>

                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <!-- include non filtered resource -->
                            <include>*.jks</include>
                            <include>data/**</include>
                        </includes>
                        <filtering>false</filtering>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.2.2</version>
                        <configuration>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                        </configuration>
                    </plugin>
                    
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repository>${docker.image.prefix}/${project.artifactId}</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <WAR_FILE>target/${project.build.finalName}.war</WAR_FILE>
                            </buildArgs>
                            <noCache>true</noCache>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>development</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <excludes>
                            <!-- exclude any non filtered resources -->
                            <exclude>*.jks</exclude>
                            <exclude>data/**</exclude>
                        </excludes>
                        <filtering>true</filtering>
                    </resource>

                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <!-- include non filtered resource -->
                            <include>*.jks</include>
                            <include>data/**</include>
                        </includes>
                        <filtering>false</filtering>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.2.2</version>
                        <configuration>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <!-- any phase before your app deploys -->
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>set-system-properties</goal>
                                </goals>
                              </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repository>${docker.image.prefix}/${project.artifactId}</repository>
                            <tag>latest</tag>
                            <buildArgs>
                                <WAR_FILE>target/${project.build.finalName}.war</WAR_FILE>
                            </buildArgs>
                            <noCache>true</noCache>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>local</id>
            <!-- by default we want local profile -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <excludes>
                            <!-- exclude any non filtered resources -->
                            <exclude>*.jks</exclude>
                            <exclude>data/**</exclude>
                        </excludes>
                        <filtering>true</filtering>
                    </resource>

                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <!-- include non filtered resource -->
                            <include>*.jks</include>
                            <include>data/**</include>
                        </includes>
                        <filtering>false</filtering>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.2.2</version>
                        <configuration>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                        </configuration>
                    </plugin>
                    
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- repositories url -->
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
     </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/snapshot</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <url>http://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>
</project>
